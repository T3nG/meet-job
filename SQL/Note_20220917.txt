================課堂解說================
資料庫管理系統 Database Management System
    -> 程式語言
    -> 人
    -> web servert
    -> App (手持裝置)


================SQL================
SQL 發音 sequel 
(1974 IBM Structured English Query Language)
Structured
Query
Language
用途 : 與關聯式資料庫管理系統溝通(新增, 查詢, 修改, 刪除)
早期資料庫的重要性沒有現在重要(大數據/AI)

有哪些資料庫系統呢?
SQLite : 目前使用戶最高的 (在手機上)
Oracle : 大元老 Oracle 公司
DB2 : IBM公司, 老師認為真正的第二名
SQL Server : Microsoft公司
    以上是前三名
Sybase : Sybase公司, 與SQL Server架構上很相像
Informix : Informix公司(被IBM併購)
Interbase : Borland公司 -Turbo C/C++ 當時最快的IDE(處理C語言)
MySQL : MySQL公司(被開發Java的母公司併購, which in 2008被Oracle併購), 主打免費

這堂課介紹的: MariaDB (基金會) 與MySQL同一個設計團隊(MySQL被Orcale併購後, 出來創立的)

近三年出來新的資料庫管理系統
NoSQL (非關聯式)
    MongoDB


================參閱 Basic_SQL.pdf================
MariaDB
    bin
        mysql.exe(新版本mariadb.dxd)
        建立連線
    data (資料庫集, 每一個資料夾就是一個資料庫)
        mysql
        test

以帳號root連線
方法一
cmd
..MariaDB\bin 
mysql -u root -p
輸入密碼
    -u 使用者帳號 -p 有密碼

方法二
root 有專屬的領域通道
    開始->所有程式->MariaDB->MySQL Client
    輸入密碼

右鍵內容, 視窗建議把文字放大(28), 版面配置更改寬度及高度(比如90/25)

建立教學資料庫(以下這行是mariadb專屬, 不同資料庫系統有不同的打法)
    先以root連線到mariadb (顯示MariaDB[(none)]> )
    SOURCE [d:][path]檔案名稱 : 執行外部的sql檔
    例: source e:\server\mariadb\Create_mariadb.sql
    只能全靠打字, 方向鍵上下可以調出歷史資料(若打錯的話不用全部重打)

    完成後, MariaDB\data 下會多一個 mydb


************基本操作(命令下完後要加分號 ;)************
可以一列一個單字, 按enter, 結束後再打;
分列打的原因, 某些指令可能會重複使用

show databases; 顯示所有資料庫
use 資料庫名稱; : 使用資料庫
    進某個資料庫
show tables [from 資料庫]; 顯示資料庫內所有資料表
    from 資料庫, 不用進去即可查看某個資料庫的資料表
select database();
    顯示目前使用的資料庫. MariaDB[目前使用的資料庫], 在MariaDB不需要這個指令
select * from 資料表; : 顯示某資料表(table)內容
select * : 顯示所有欄位, 使用率不高, 通常資料都有很多筆
    select * from books;
show columns from 資料表; / describe 資料表; : 顯示結構
null: yes -> 允許不填資料
primary key : 讓索引更迅速, 可以設在流水號, id

刪除
    delete from 資料表 where 刪除條件;
        delete from employee where age <35;
        刪除age<35的資料
        delete from employee; 
        刪除整張資料表的資料, 但資料表還在
    drop table 資料表名稱; : 移除資料表
    drop database 資料庫名稱; : 移除資料庫


************六個查詢子句************
1.select 回應/回傳查詢的結果
2.from 指定資料來源(可以多個, 來自資料表/view表格)
3.where 設定查詢條件(過濾不使用的資料)
4.group by 對資料執行分組/分類
5.having 依組別設定查詢條件(過濾不使用的資料)
6.order by 對資料進行排序(asc遞增, 是預設狀態, desc遞減)

下達指令的次序是123456
    未使用的子句直接略過
實際的執行次序是234561

view表格: 唯讀的資料表, 資料來源是查詢的結果

進資料庫就好像去量販店買東西, select就好像購物袋

常用統計函數
1. count(欄位名稱) : 計算紀錄筆數
        欄位名稱可用 * 來取代
2. sum(欄位名稱) : 對指定的欄位內容做加總
以上兩個函數隸屬聚合函數(group function)
即使在不同資料庫系統都一樣, 連excel也是)

統計每個組別的總數量


************指令輸入************
於cmd視窗按左鍵選取範圍, 放開左鍵按右鍵, 會直接進到剪貼簿

select *
from employee
order by num asc/desc;

select num,name,age,adress
from employee
where age >40
order by age;


************測試指令************
select COUNT(type_name) from books group by type_name;
出來只有數字, 不知道是對應什麼欄位

select type_name, COUNT(*) from books group by type_name;
select type_name, COUNT(type_name) from books group by type_name;
+-----------+----------+
| type_name | COUNT(*) |
+-----------+----------+
| 影像      |        3 |
| 文書      |        4 |
| 旅遊      |        4 |
| 程式      |        9 |
| 繪圖      |        2 |
+-----------+----------+

select sex,COUNT(*) from employee group by sex; 顯示男女分組分別總數
select COUNT(*) from employee; 顯示總數

    已經選擇欄位的話, COUNT(*)即可, 大寫是為了凸顯這是函數
    COUNT(*)只要有任何一欄有填資料, 就會算他為一筆資料
    COUNT(欄位名稱)的話, 只要這個欄位資料沒填寫, 就不會算他為一筆資料

    例如:
        books中統計每一組的總銷售金額
        select type_name,SUM(subtotal) from books group by type_name;
        +-----------+---------------+
        | type_name | SUM(subtotal) |
        +-----------+---------------+
        | 影像      |         33580 |
        | 文書      |        152900 |
        | 旅遊      |        260200 |
        | 程式      |        388000 |
        | 繪圖      |        132600 |
        +-----------+---------------+

        顯示的欄位改一下, 讓資料呈現更好讀(給別名alias)
        select type_name as 書籍類別,SUM(subtotal) as 總金額 from books group by type_name;
        +----------+--------+
        | 書籍類別 | 總金額 |
        +----------+--------+
        | 影像     |  33580 |
        | 文書     | 152900 |
        | 旅遊     | 260200 |
        | 程式     | 388000 |
        | 繪圖     | 132600 |
        +----------+--------+

        可以事後再給欄位標題中文, 一開始設計時建議不要將欄位設為中文

        有 group by 才有 having
        select type_name as 書籍類別,SUM(subtotal) as 總金額 
        from books group by type_name having type_name='程式';
        +----------+--------+
        | 書籍類別 | 總金額 |
        +----------+--------+
        | 程式     | 388000 |
        +----------+--------+


************資料的單位************
bit -> byte -> field -> record -> table

    比如有個報名表, 某個填寫欄位即field
    有兩三個人填表單了, 資料回傳
    一個表單就回傳一筆資料 -> record
        姓名: 王小明 地址:... 電話:...
    含有許多record的即資料表(table)

    資料表的設定
    1.欄位名稱(不建議用中文)
    2.資料的型態與大小
    3.約束 constraint
    
    Structured(結構), 像excel表單的呈現方式

進到系統->服務->將MariaDB從自動啟動改成手動
學習階段可能會裝很多資料庫, 建議改成手動, 降低開機時對系統的消耗


************資料型態************
資料庫有15種, 一般程式語言大約有8種(比如Java), python只有4種

    時間                   (效能取捨)
TIMESTAMP   YYYYMMDDhhmmss       4位元組
DATE        YYYY-MM-DD           3位元組
DATETIME    YYYY-MM-DD hh:mm:ss  8位元組

    文字資料        (CHAR效能會比VARCHAR好)
CHAR(n)     長度n個字元(無論輸入幾個字元, 系統自動補空格到指定字元長度)
VARCHAR(n)  變動長度最大為n個字元
ENUM        指定欄位成員/內容, 比如只能放男生或女生
TEXT        最大長度65,535

BLOB        二進位物件 (比如放圖片?)

    整數           (有無符號: 從0開始或跨0)
TINYINT     1位元組  2^8
SMALLINT    2位元組  2^16
MEDIUMINT   3位元組  2^24
INT         4位元組  2^32
BIGINT      8位元組  2^64

    小數
FLOAT       4位元組  小數有效位數7位
DOUBLE      8位元組  小數有效位數15~16位
DECIMAL[(n,d)]  長度n位, 小數d位


SQL 對應 Java
TINYINT   ->  byte
SMALLINT  ->  short
MEDIUMINT ->    -
INT       ->  int
BIGINT    ->  long
FLOAT     ->  float
DOUBLE    ->  double


提到TEXT時
做表格時, 看到最後面多了一個備註欄, 很多時候是空白, 怎麼新增進入資料庫呢?
若一定要有, 會把備註的格式設為TEXT
但真實情境下, 資料庫裡不應該有備註, 而是另外建立一個資料庫/檔案夾等,
存放過長的文字內容比如考核等, 再以索引/路徑去連結

項目  名稱  ...  備註


************建立資料庫資料表************
create database 資料庫名稱
    create database abc;

建立時需要打很多東西, 建議先打在其他地方再放進cmd
為什麼不用有GUI的方式呢? 老師希望同學練習不用GUI的方式
create table 資料表名稱(
    欄位名稱1 資料型態 [constraint]
    欄位名稱2 資料型態 [constraint]
    .
    .
    [primary key(欄位)]
    [foreign key(欄位) references 另一張資料表(欄位)]
)
    
    複製後, 到cmd按右鍵, 就會貼上了
    create table myfriend(
        no    char(4)    not null,
        name  varchar(10),
        age   tinyint    not null default 20,
        primary key(no)
    );


************資料表的操作************
1. 新增資料列
    insert into 資料表 (欄位名稱1, 欄位名稱2, ..)
    values (資料1, 資料2, ..)
        insert into myfriend (no, name, age)
        values("0001","gigi","33");
    
        如果每一欄都要新增資料的話(必須依據欄位次序)
        insert into myfriend
        values("0002","kiki",36)
        --數字不用""起來嗎?

        insert into myfriend(no)
        values("0003");
        +------+------+-----+
        | no   | name | age |
        +------+------+-----+
        | 0001 | gigi |  33 |
        | 0002 | kiki |  36 |
        | 0003 | NULL |  20 |
        +------+------+-----+
        
        insert into myfriend(no,name,age)
        values("0002","nana",45);
        ERROR 1062 (23000): Duplicate entry '0002' for key 'PRIMARY'

        insert into myfriend(no,name,age) values("0004","nana",45);
        insert into myfriend(no,name,age) values("0005","lulu",31);
        +------+------+-----+
        | no   | name | age |
        +------+------+-----+
        | 0001 | gigi |  33 |
        | 0002 | kiki |  36 |
        | 0003 | NULL |  20 |
        | 0004 | nana |  45 |
        | 0005 | lulu |  31 |
        +------+------+-----+


2. 更新資料表的資料
    update 資料表
    set 欄位名稱 = 運算式
    where 更新資料的條件
        update myfriend 
        set name='Anna' 
        where no='0003';
        +------+------+-----+
        | no   | name | age |
        +------+------+-----+
        | 0001 | gigi |  33 |
        | 0002 | kiki |  36 |
        | 0003 | Anna |  20 |
        | 0004 | nana |  45 |
        | 0005 | lulu |  31 |
        +------+------+-----+

        use mydb;
        update employee set age=age+1;

3. 刪除資料表的資料
    delete from 資料表 where
    delete from 資料表

4. 修改資料表的結構
    先顯示目前的結構為何
    show columns from employee;
    describe employee; (別的資料庫管理系統也有這個指令)
    +---------+---------------+------+-----+---------+-------+
    | Field   | Type          | Null | Key | Default | Extra |
    +---------+---------------+------+-----+---------+-------+
    | num     | char(6)       | YES  |     | NULL    |       |
    | name    | char(8)       | YES  |     | NULL    |       |
    | sex     | enum('F','M') | YES  |     | NULL    |       |
    | birth   | date          | YES  |     | NULL    |       |
    | age     | tinyint(4)    | YES  |     | NULL    |       |
    | address | char(28)      | YES  |     | NULL    |       |
    +---------+---------------+------+-----+---------+-------+

    alter table 資料表
        add 欄位名稱 資料型態 - 新增欄位
        modify                 修改
        drop                   刪除
        change                 更改欄位名稱

        alter table employee modify num char(10);
        alter table employee add memo text;
        +---------+---------------+------+-----+---------+-------+
        | Field   | Type          | Null | Key | Default | Extra |
        +---------+---------------+------+-----+---------+-------+
        | num     | char(10)      | YES  |     | NULL    |       |
        | name    | char(8)       | YES  |     | NULL    |       |
        | sex     | enum('F','M') | YES  |     | NULL    |       |
        | birth   | date          | YES  |     | NULL    |       |
        | age     | tinyint(4)    | YES  |     | NULL    |       |
        | address | char(28)      | YES  |     | NULL    |       |
        | memo    | text          | YES  |     | NULL    |       |
        +---------+---------------+------+-----+---------+-------+

        alter table employee drop age;
        +---------+---------------+------+-----+---------+-------+
        | Field   | Type          | Null | Key | Default | Extra |
        +---------+---------------+------+-----+---------+-------+
        | num     | char(10)      | YES  |     | NULL    |       |
        | name    | char(8)       | YES  |     | NULL    |       |
        | sex     | enum('F','M') | YES  |     | NULL    |       |
        | birth   | date          | YES  |     | NULL    |       |
        | address | char(28)      | YES  |     | NULL    |       |
        | memo    | text          | YES  |     | NULL    |       |
        +---------+---------------+------+-----+---------+-------+

        更改欄位名稱
        alter table employee change num no char(6);
        +---------+---------------+------+-----+---------+-------+
        | Field   | Type          | Null | Key | Default | Extra |
        +---------+---------------+------+-----+---------+-------+
        | no      | char(6)       | YES  |     | NULL    |       |
        | name    | char(8)       | YES  |     | NULL    |       |
        | sex     | enum('F','M') | YES  |     | NULL    |       |
        | birth   | date          | YES  |     | NULL    |       |
        | address | char(28)      | YES  |     | NULL    |       |
        | memo    | text          | YES  |     | NULL    |       |
        +---------+---------------+------+-----+---------+-------+

        可以在此更改primary key嗎? 比如把no設為PK


************以mydb的employee為例************
在規劃資料表時, 有個 Normal Form, 正規化
這個資料表合格嗎?　不合格
    1. 有沒有重複的欄位? birth <-> age
        00007 陳美美 29歲, 但出生年卻是1975, 難道要每年都更新age嗎?
        age欄位不該存在
    2. 地址: 有台北市, 有北市

+--------+----------+------+------------+------+----------------------------+
| num    | name     | sex  | birth      | age  | address                    |
+--------+----------+------+------------+------+----------------------------+
| 000009 | 黃怡仁   | M    | 1961-10-07 |   43 | 台南市善化區茄拔里100之3號 |
| 000007 | 陳美美   | F    | 1975-02-06 |   29 | 高雄市前鎮區200號          |
| 000012 | 陳秀惠   | F    | 1974-11-20 |   30 | 台北市南京東路一段218號    |
| 000004 | 黃淑珍   | F    | 1973-08-29 |   31 | 台南市麻豆區中正路59號     |
| 000014 | 黃玉瑛   | F    | 1972-12-10 |   32 | 台南市善化區民權路89號     |
| 000010 | 王曉菁   | F    | 1966-10-17 |   38 | 高雄市中正四路112號        |
| 000019 | 王耿豪   | M    | 1971-02-03 |   33 | 北市大直街102號3樓         |
| 000002 | 陳美鳳   | F    | 1971-05-28 |   33 | 台南市白河區三明路192號    |
| 000015 | 王簡淑玲 | F    | 1959-10-19 |   45 | 台南市南化區中正路9號      |
| 000013 | 李英王   | M    | 1970-07-26 |   34 | 台南市仁德區勝利路116號    |
| 000020 | 鄭淑蘭   | F    | 1969-09-18 |   35 | 新北市中和區中山路177號    |
| 000017 | 李玉龍   | M    | 1968-01-30 |   36 | 台北市內湖區內湖路二段5號  |
| 000005 | 王五郎   | M    | 1966-11-06 |   38 | 南投縣北港村3號            |
| 000001 | 張大田   | M    | 1972-06-23 |   32 | 台南市中西區中正路18號之2  |
| 000016 | 高陳淑敏 | F    | 1964-06-16 |   40 | 台北市華陰街10號           |
| 000006 | 張玉明   | M    | 1964-07-25 |   40 | 高雄市前鎮區28之1號        |
| 000003 | 李王育   | M    | 1956-02-28 |   48 | 台南市安南區府前路90巷2號  |
| 000008 | 李小隆   | M    | 1961-09-09 |   43 | 台北市士林區小北街21號     |
| 000011 | 張玉風   | M    | 1957-04-19 |   47 | 高雄市路竹區民權路89號     |
| 000018 | 廖元瑛   | M    | 1973-03-30 |   31 | 北市天母富貴一路5巷8號     |
+--------+----------+------+------------+------+----------------------------+


************正規化 Normal Form************
實務上大多只會用到前三階段
1NF  移除一欄多值
2NF  確立primary key, 移除未與primary key相依的欄位
3NF  除去遞移相依
BCNF
4NF
5NF


************SQL 運算符號************
1. 算術運算符號
    ()  括號
    *   乘號
    /   除號
    %   餘數
    +   加號
    -   減號

        select 123/13; 進行運算
        select 123*3;
        .
        .

2. 字串連結運算符號
    Oracle, SQLite : ||
    SQL Server, ACCESS : +, &
    MySQL, MariaDV : concat()函數

        select concat("ABC","abc",123,789.12);
        +--------------------------------+
        | concat("ABC","abc",123,789.12) |
        +--------------------------------+
        | ABCabc123789.12                |
        +--------------------------------+

3. 比較運算符號
    =     等於
    >     大於
    <     小於
    >=    大於或等於
    <=    小於或等於
    <>,!= 不等於 (!代表not)
    說明: True 以1表示, False以0表示

        select 5>3;
        +-----+
        | 5>3 |
        +-----+
        |   1 |
        +-----+

4. NULL 運算
    IS NULL
    IS NOT NULL

        比如要查找哪幾個還沒有付款
        select * from order;
        +-----------+------------+-----------+------------+---------+
        | order_num | order_date | distr_num | paid_date  | paid_ok |
        +-----------+------------+-----------+------------+---------+
        |       101 | 2012-05-20 |      1004 | 2012-07-22 | Y       |
        |       102 | 2012-05-21 |      1001 | 2012-06-03 | Y       |
        |       103 | 2012-05-22 |      1004 | 2012-06-14 | Y       |
        |       104 | 2012-05-22 |      1006 | NULL       | N       |
        |       105 | 2012-05-24 |      1016 | 2012-06-21 | Y       |
        |       106 | 2012-05-30 |      1012 | NULL       | N       |
        |       107 | 2012-05-31 |      1017 | NULL       | N       |
        |       108 | 2012-06-07 |      1010 | 2012-07-21 | Y       |
        |       109 | 2012-06-14 |      1011 | 2012-08-21 | N       |
        |       110 | 2012-06-17 |      1015 | 2012-08-22 | N       |
        |       111 | 2012-06-18 |      1004 | 2012-08-29 | Y       |
        |       112 | 2012-06-18 |      1017 | NULL       | N       |
        |       113 | 2012-06-23 |      1004 | 2012-07-31 | N       |
        |       114 | 2012-06-25 |      1006 | 2012-07-10 | N       |
        |       115 | 2012-06-27 |      1010 | 2012-08-31 | N       |
        |       116 | 2012-06-29 |      1019 | NULL       | N       |
        |       117 | 2012-07-09 |      1020 | NULL       | N       |
        |       118 | 2012-07-10 |      1021 | 2012-08-06 | Y       |
        +-----------+------------+-----------+------------+---------+

        select order_num, distr_num, paid_date
        from orders
        where paid_date is null;
        +-----------+-----------+-----------+
        | order_num | distr_num | paid_date |
        +-----------+-----------+-----------+
        |       104 |      1006 | NULL      |
        |       106 |      1012 | NULL      |
        |       107 |      1017 | NULL      |
        |       112 |      1017 | NULL      |
        |       116 |      1019 | NULL      |
        |       117 |      1020 | NULL      |
        +-----------+-----------+-----------+

        select order_num, distr_num, paid_date
        from orders
        where paid_date is not null;
        +-----------+-----------+------------+
        | order_num | distr_num | paid_date  |
        +-----------+-----------+------------+
        |       101 |      1004 | 2012-07-22 |
        |       102 |      1001 | 2012-06-03 |
        |       103 |      1004 | 2012-06-14 |
        |       105 |      1016 | 2012-06-21 |
        |       108 |      1010 | 2012-07-21 |
        |       109 |      1011 | 2012-08-21 |
        |       110 |      1015 | 2012-08-22 |
        |       111 |      1004 | 2012-08-29 |
        |       113 |      1004 | 2012-07-31 |
        |       114 |      1006 | 2012-07-10 |
        |       115 |      1010 | 2012-08-31 |
        |       118 |      1021 | 2012-08-06 |
        +-----------+-----------+------------+

5. 邏輯運算符號
    AND 且
    OR  或
    NOT 非

講解邏輯運算符號時

    取子字串函數
    1. left("ABCDEFG",3)  => "ABC"  由左側開始向右取3個值
    2. right("ABCDEFG",4) => "DEFG" 由右側開始向左取4個值(排序不變)
    3. mid("ABCDEFG",2,4) => "BCDE" 由左起第2字元向右取4個值

    例, 查詢姓氏為: 王, 陳
    select * from employee 
    where left(name,1) ='王'
    or left(name,1) ='陳';
    +--------+----------+------+------------+------+-------------------------+
    | num    | name     | sex  | birth      | age  | address                 |
    +--------+----------+------+------------+------+-------------------------+
    | 000007 | 陳美美   | F    | 1975-02-06 |   29 | 高雄市前鎮區200號       |
    | 000012 | 陳秀惠   | F    | 1974-11-20 |   30 | 台北市南京東路一段218號 |
    | 000010 | 王曉菁   | F    | 1966-10-17 |   38 | 高雄市中正四路112號     |
    | 000019 | 王耿豪   | M    | 1971-02-03 |   33 | 北市大直街102號3樓      |
    | 000002 | 陳美鳳   | F    | 1971-05-28 |   33 | 台南市白河區三明路192號 |
    | 000015 | 王簡淑玲 | F    | 1959-10-19 |   45 | 台南市南化區中正路9號   |
    | 000005 | 王五郎   | M    | 1966-11-06 |   38 | 南投縣北港村3號         |
    +--------+----------+------+------------+------+-------------------------+

6. 其他運算符號
    LIKE 
        用法: 欄位名稱 like "比對字串"
        說明: 比對字串中可以使用替代字元
                %: 代表任意長度的字串
                _: 代表任意一個字元
              可用於任意型態的欄位
    BETWEEN
        用法: 欄位名稱 between 值1 and 值2
        說明: 設定值域的範圍
              值2必須大於值1
              值1值2是廣義的值, 除了數值外, 也可以是字串
    IN
        用法: 欄位名稱 in(值1,值2, ...)
        說明: 設定子集合
              這些值是廣義的值, 除了數值外, 也可以是字串


LIKE - 以上面的查找姓王姓陳為例
    select * from employee 
    where name LIKE "王%" or name LIKE "陳%";
    +--------+----------+------+------------+------+-------------------------+
    | num    | name     | sex  | birth      | age  | address                 |
    +--------+----------+------+------------+------+-------------------------+
    | 000007 | 陳美美   | F    | 1975-02-06 |   29 | 高雄市前鎮區200號       |
    | 000012 | 陳秀惠   | F    | 1974-11-20 |   30 | 台北市南京東路一段218號 |
    | 000010 | 王曉菁   | F    | 1966-10-17 |   38 | 高雄市中正四路112號     |
    | 000019 | 王耿豪   | M    | 1971-02-03 |   33 | 北市大直街102號3樓      |
    | 000002 | 陳美鳳   | F    | 1971-05-28 |   33 | 台南市白河區三明路192號 |
    | 000015 | 王簡淑玲 | F    | 1959-10-19 |   45 | 台南市南化區中正路9號   |
    | 000005 | 王五郎   | M    | 1966-11-06 |   38 | 南投縣北港村3號         |
    +--------+----------+------+------------+------+-------------------------+

BETWEEN
    select * from employee
    where age between 35 and 45;  where age>=35 and age<=45 一樣意思
    +--------+----------+------+------------+------+----------------------------+
    | num    | name     | sex  | birth      | age  | address                    |
    +--------+----------+------+------------+------+----------------------------+
    | 000009 | 黃怡仁   | M    | 1961-10-07 |   43 | 台南市善化區茄拔里100之3號 |
    | 000010 | 王曉菁   | F    | 1966-10-17 |   38 | 高雄市中正四路112號        |
    | 000015 | 王簡淑玲 | F    | 1959-10-19 |   45 | 台南市南化區中正路9號      |
    | 000020 | 鄭淑蘭   | F    | 1969-09-18 |   35 | 新北市中和區中山路177號    |
    | 000017 | 李玉龍   | M    | 1968-01-30 |   36 | 台北市內湖區內湖路二段5號  |
    | 000005 | 王五郎   | M    | 1966-11-06 |   38 | 南投縣北港村3號            |
    | 000016 | 高陳淑敏 | F    | 1964-06-16 |   40 | 台北市華陰街10號           |
    | 000006 | 張玉明   | M    | 1964-07-25 |   40 | 高雄市前鎮區28之1號        |
    | 000008 | 李小隆   | M    | 1961-09-09 |   43 | 台北市士林區小北街21號     |
    +--------+----------+------+------------+------+----------------------------+

    select * from employee
    where num between "000010" and "000018" order by num;
    +--------+----------+------+------------+------+---------------------------+
    | num    | name     | sex  | birth      | age  | address                   |
    +--------+----------+------+------------+------+---------------------------+
    | 000010 | 王曉菁   | F    | 1966-10-17 |   38 | 高雄市中正四路112號       |
    | 000011 | 張玉風   | M    | 1957-04-19 |   47 | 高雄市路竹區民權路89號    |
    | 000012 | 陳秀惠   | F    | 1974-11-20 |   30 | 台北市南京東路一段218號   |
    | 000013 | 李英王   | M    | 1970-07-26 |   34 | 台南市仁德區勝利路116號   |
    | 000014 | 黃玉瑛   | F    | 1972-12-10 |   32 | 台南市善化區民權路89號    |
    | 000015 | 王簡淑玲 | F    | 1959-10-19 |   45 | 台南市南化區中正路9號     |
    | 000016 | 高陳淑敏 | F    | 1964-06-16 |   40 | 台北市華陰街10號          |
    | 000017 | 李玉龍   | M    | 1968-01-30 |   36 | 台北市內湖區內湖路二段5號 |
    | 000018 | 廖元瑛   | M    | 1973-03-30 |   31 | 北市天母富貴一路5巷8號    |
    +--------+----------+------+------------+------+---------------------------+

IN
    select * from employee
    where age in(30,35,40,45) order by age;  where age=30 or age=35 or age=40 or age=45; 一樣意思
    +--------+----------+------+------------+------+-------------------------+
    | num    | name     | sex  | birth      | age  | address                 |
    +--------+----------+------+------------+------+-------------------------+
    | 000012 | 陳秀惠   | F    | 1974-11-20 |   30 | 台北市南京東路一段218號 |
    | 000020 | 鄭淑蘭   | F    | 1969-09-18 |   35 | 新北市中和區中山路177號 |
    | 000016 | 高陳淑敏 | F    | 1964-06-16 |   40 | 台北市華陰街10號        |
    | 000006 | 張玉明   | M    | 1964-07-25 |   40 | 高雄市前鎮區28之1號     |
    | 000015 | 王簡淑玲 | F    | 1959-10-19 |   45 | 台南市南化區中正路9號   |
    +--------+----------+------+------------+------+-------------------------+

    以上面查找姓名為例
    select * from employee
    where left(name,1) in("王","陳","張") order by name;
    +--------+----------+------+------------+------+---------------------------+
    | num    | name     | sex  | birth      | age  | address                   |
    +--------+----------+------+------------+------+---------------------------+
    | 000001 | 張大田   | M    | 1972-06-23 |   32 | 台南市中西區中正路18號之2 |
    | 000006 | 張玉明   | M    | 1964-07-25 |   40 | 高雄市前鎮區28之1號       |
    | 000011 | 張玉風   | M    | 1957-04-19 |   47 | 高雄市路竹區民權路89號    |
    | 000005 | 王五郎   | M    | 1966-11-06 |   38 | 南投縣北港村3號           |
    | 000010 | 王曉菁   | F    | 1966-10-17 |   38 | 高雄市中正四路112號       |
    | 000015 | 王簡淑玲 | F    | 1959-10-19 |   45 | 台南市南化區中正路9號     |
    | 000019 | 王耿豪   | M    | 1971-02-03 |   33 | 北市大直街102號3樓        |
    | 000012 | 陳秀惠   | F    | 1974-11-20 |   30 | 台北市南京東路一段218號   |
    | 000007 | 陳美美   | F    | 1975-02-06 |   29 | 高雄市前鎮區200號         |
    | 000002 | 陳美鳳   | F    | 1971-05-28 |   33 | 台南市白河區三明路192號   |
    +--------+----------+------+------------+------+---------------------------+


************正則/正規表示(表達)式 Regular Expression************
select * from employee
where address REGEXP "(台北|北市)";
+--------+----------+------+------------+------+---------------------------+
| num    | name     | sex  | birth      | age  | address                   |
+--------+----------+------+------------+------+---------------------------+
| 000012 | 陳秀惠   | F    | 1974-11-20 |   30 | 台北市南京東路一段218號   |
| 000019 | 王耿豪   | M    | 1971-02-03 |   33 | 北市大直街102號3樓        |
| 000020 | 鄭淑蘭   | F    | 1969-09-18 |   35 | 新北市中和區中山路177號   |
| 000017 | 李玉龍   | M    | 1968-01-30 |   36 | 台北市內湖區內湖路二段5號 |
| 000016 | 高陳淑敏 | F    | 1964-06-16 |   40 | 台北市華陰街10號          |
| 000008 | 李小隆   | M    | 1961-09-09 |   43 | 台北市士林區小北街21號    |
| 000018 | 廖元瑛   | M    | 1973-03-30 |   31 | 北市天母富貴一路5巷8號    |
+--------+----------+------+------------+------+---------------------------+

select * from employee
where address REGEXP "^(台北|北市)";  ^從首字開始起算
+--------+----------+------+------------+------+---------------------------+
| num    | name     | sex  | birth      | age  | address                   |
+--------+----------+------+------------+------+---------------------------+
| 000012 | 陳秀惠   | F    | 1974-11-20 |   30 | 台北市南京東路一段218號   |
| 000019 | 王耿豪   | M    | 1971-02-03 |   33 | 北市大直街102號3樓        |
| 000017 | 李玉龍   | M    | 1968-01-30 |   36 | 台北市內湖區內湖路二段5號 |
| 000016 | 高陳淑敏 | F    | 1964-06-16 |   40 | 台北市華陰街10號          |
| 000008 | 李小隆   | M    | 1961-09-09 |   43 | 台北市士林區小北街21號    |
| 000018 | 廖元瑛   | M    | 1973-03-30 |   31 | 北市天母富貴一路5巷8號    |
+--------+----------+------+------------+------+---------------------------+

select * from employee
where name REGEXP "^(王|陳|張).+$" order by name;  .+$ 剩下的任意長度
+--------+----------+------+------------+------+---------------------------+
| num    | name     | sex  | birth      | age  | address                   |
+--------+----------+------+------------+------+---------------------------+
| 000001 | 張大田   | M    | 1972-06-23 |   32 | 台南市中西區中正路18號之2 |
| 000006 | 張玉明   | M    | 1964-07-25 |   40 | 高雄市前鎮區28之1號       |
| 000011 | 張玉風   | M    | 1957-04-19 |   47 | 高雄市路竹區民權路89號    |
| 000005 | 王五郎   | M    | 1966-11-06 |   38 | 南投縣北港村3號           |
| 000010 | 王曉菁   | F    | 1966-10-17 |   38 | 高雄市中正四路112號       |
| 000015 | 王簡淑玲 | F    | 1959-10-19 |   45 | 台南市南化區中正路9號     |
| 000019 | 王耿豪   | M    | 1971-02-03 |   33 | 北市大直街102號3樓        |
| 000012 | 陳秀惠   | F    | 1974-11-20 |   30 | 台北市南京東路一段218號   |
| 000007 | 陳美美   | F    | 1975-02-06 |   29 | 高雄市前鎮區200號         |
| 000002 | 陳美鳳   | F    | 1971-05-28 |   33 | 台南市白河區三明路192號   |
+--------+----------+------+------------+------+---------------------------+

其他還有許多規則, 以及更多替代字元的用法, 到下堂課 Java 會再詳解


************作業************
作業 Basic_SQL.pdf
page.10 練習1 / 練習2
page.12 練習1 / 練習2 / 練習3 / 練習4

Page10_Lab1
Page10_Lab2

Page12_Lab1
Page12_Lab2
Page12_Lab3
Page12_Lab4
Page12_Lab5
